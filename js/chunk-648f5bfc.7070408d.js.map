{"version":3,"sources":["webpack:///./node_modules/toggle-selection/index.js","webpack:///./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack:///./node_modules/js-base64/base64.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/components/elements/TextAreaHasCopy.vue?c06c","webpack:///./src/views/tool/Codecs.vue?9bb3","webpack:///src/views/tool/Codecs.vue","webpack:///./src/views/tool/Codecs.vue?75a8","webpack:///./src/views/tool/Codecs.vue","webpack:///./node_modules/base-32/lib/index.js","webpack:///./src/components/elements/TextAreaHasCopy.vue?d785","webpack:///src/components/elements/TextAreaHasCopy.vue","webpack:///./src/components/elements/TextAreaHasCopy.vue?fef6","webpack:///./src/components/elements/TextAreaHasCopy.vue","webpack:///./node_modules/copy-to-clipboard/index.js"],"names":["module","exports","selection","document","getSelection","rangeCount","active","activeElement","ranges","i","push","getRangeAt","tagName","toUpperCase","blur","removeAllRanges","type","forEach","range","addRange","focus","global","__WEBPACK_AMD_DEFINE_RESULT__","root","nodeType","freeGlobal","window","self","punycode","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","not-basic","invalid-input","baseMinusTMin","floor","Math","stringFromCharCode","String","fromCharCode","error","RangeError","map","array","fn","length","result","mapDomain","string","parts","split","replace","labels","encoded","join","ucs2decode","value","extra","output","counter","charCodeAt","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","decode","input","out","basic","j","index","oldi","w","t","baseMinusT","inputLength","n","bias","lastIndexOf","splice","encode","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","toUnicode","test","slice","toLowerCase","toASCII","version","ucs2","call","__webpack_require__","undefined","__WEBPACK_AMD_DEFINE_ARRAY__","factory","this","_Base64","Base64","buffer","eval","err","b64chars","b64tab","bin","l","charAt","cb_utob","c","cc","re_utob","utob","u","cb_encode","ccc","padlen","ord","chars","btoa","b","_encode","from","Uint8Array","constructor","toString","urisafe","m0","encodeURI","re_btou","RegExp","cb_btou","cccc","cp","offset","btou","cb_decode","len","_atob","atob","a","_decode","noConflict","VERSION","fromBase64","toBase64","__buffer__","Object","defineProperty","noEnum","v","enumerable","writable","configurable","extendString","prototype","apply","webpackPolyfill","deprecate","paths","children","get","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TextAreaHasCopy_vue_vue_type_style_index_0_id_07f9acca_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TextAreaHasCopy_vue_vue_type_style_index_0_id_07f9acca_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","$t","attrs","role","_e","directives","name","rawName","expression","staticStyle","min-height","placeholder","domProps","on","$event","target","composing","topText","id","change","$$selectedVal","Array","filter","options","o","selected","val","_value","codecsType","multiple","_l","item","click","minHeight","bottomText","staticRenderFns","Codecsvue_type_script_lang_js_","components","TextAreaHasCopy","[object Object]","title","$i18n","meta","codecsTypes","isError","methods","targetText","base64","lib_default","punycode_default","_unused","tool_Codecsvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","r","e","d","__esModule","default","hasOwnProperty","p","s","TYPED_ARRAY_SUPPORT","__proto__","Error","f","TypeError","ArrayBuffer","h","fill","g","isEncoding","write","byteLength","isBuffer","copy","H","W","data","y","alloc","isView","X","M","U","Y","I","T","C","A","isNaN","E","indexOf","readUInt16BE","Number","parseInt","substr","_","G","J","R","P","B","Z","K","fromByteArray","min","S","$","V","O","L","x","D","N","Q","F","z","tt","trim","toByteArray","Buffer","SlowBuffer","INSPECT_MAX_BYTES","foo","subarray","kMaxLength","poolSize","_augment","Symbol","species","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","concat","swap16","swap32","swap64","arguments","equals","inspect","match","includes","isFinite","toJSON","_arr","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","set","abs","repeat","ceil","NaN","log","LN2","isArray","Function","href","data-toggle","data-placement","icon","style","readonly","TextAreaHasCopyvue_type_script_lang_js_","props","copy_to_clipboard_default","attr","tooltip","computed","watch","elements_TextAreaHasCopyvue_type_script_lang_js_","deselectCurrent","defaultMessage","format","message","copyKey","navigator","userAgent","text","debug","reselectPrevious","mark","success","createRange","createElement","textContent","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","selectNode","successful","execCommand","console","warn","clipboardData","setData","prompt","removeRange","removeChild"],"mappings":"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","file":"js/chunk-648f5bfc.7070408d.js","sourcesContent":["\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","/*\n *  base64.js\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? module.exports = factory(global)\n        : typeof define === 'function' && define.amd\n        ? define(factory) : factory(global)\n}((\n    typeof self !== 'undefined' ? self\n        : typeof window !== 'undefined' ? window\n        : typeof global !== 'undefined' ? global\n: this\n), function(global) {\n    'use strict';\n    // existing version for noConflict()\n    global = global || {};\n    var _Base64 = global.Base64;\n    var version = \"2.5.1\";\n    // if node.js and NOT React Native, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = eval(\"require('buffer').Buffer\");\n        } catch (err) {\n            buffer = undefined;\n        }\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ?\n        buffer.from && Uint8Array && buffer.from !== Uint8Array.from\n        ? function (u) {\n            return (u.constructor === buffer.constructor ? u : buffer.from(u))\n                .toString('base64')\n        }\n        :  function (u) {\n            return (u.constructor === buffer.constructor ? u : new  buffer(u))\n                .toString('base64')\n        }\n        : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var _atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/\\S{1,4}/g, cb_decode);\n    };\n    var atob = function(a) {\n        return _atob(String(a).replace(/[^A-Za-z0-9\\+\\/]/g, ''));\n    };\n    var _decode = buffer ?\n        buffer.from && Uint8Array && buffer.from !== Uint8Array.from\n        ? function(a) {\n            return (a.constructor === buffer.constructor\n                    ? a : buffer.from(a, 'base64')).toString();\n        }\n        : function(a) {\n            return (a.constructor === buffer.constructor\n                    ? a : new buffer(a, 'base64')).toString();\n        }\n        : function(a) { return btou(_atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict,\n        __buffer__: buffer\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    //\n    // export Base64 to the namespace\n    //\n    if (global['Meteor']) { // Meteor.js\n        Base64 = global.Base64;\n    }\n    // module.exports and AMD are mutually exclusive.\n    // module.exports has precedence.\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n    // that's it!\n    return {Base64: global.Base64}\n}));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TextAreaHasCopy.vue?vue&type=style&index=0&id=07f9acca&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TextAreaHasCopy.vue?vue&type=style&index=0&id=07f9acca&scoped=true&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('h1',[_vm._v(_vm._s(_vm.$t(\"title.codecs\")))]),_c('p',{staticClass:\"lead\"},[_vm._v(\"\\n        \"+_vm._s(_vm.$t(\"description.codecs\"))+\"\\n    \")]),(_vm.isError)?_c('div',{staticClass:\"alert alert-danger\",attrs:{\"role\":\"alert\"}},[_vm._v(\"\\n        \"+_vm._s(_vm.$t(\"message.decodeError\"))+\"\\n    \")]):_vm._e(),_c('div',{staticClass:\"form-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.topText),expression:\"topText\"}],staticClass:\"form-control\",staticStyle:{\"min-height\":\"250px\"},attrs:{\"placeholder\":_vm.$t('text.text')},domProps:{\"value\":(_vm.topText)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.topText=$event.target.value}}})]),_c('div',{staticClass:\"form-group row justify-content-md-center\"},[_c('div',{staticClass:\"form-group col-12 col-md-4 col-lg-2\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.codecsType),expression:\"codecsType\"}],staticClass:\"form-control\",attrs:{\"id\":\"inputState\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.codecsType=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.codecsTypes),function(item){return _c('option',[_vm._v(_vm._s(item))])}),0)]),_c('div',{staticClass:\"form-group col-12 col-md-3 col-lg-2\"},[_c('button',{staticClass:\"btn btn-sm btn-primary btn-block\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.encode}},[_vm._v(_vm._s(_vm.$t(\"text.encode\"))+\"\\n            \")])]),_c('div',{staticClass:\"form-group col-12 col-md-3 col-lg-2\"},[_c('button',{staticClass:\"btn btn-sm btn-primary btn-block\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.decode}},[_vm._v(_vm._s(_vm.$t(\"text.decode\"))+\"\\n            \")])])]),_c('div',{staticClass:\"form-group\"},[_c('TextAreaHasCopy',{attrs:{\"placeholder\":_vm.$t('text.ciphertext'),\"minHeight\":\"250px\",\"value\":_vm.bottomText}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"container\">\n        <h1>{{ $t(\"title.codecs\") }}</h1>\n        <p class=\"lead\">\n            {{ $t(\"description.codecs\") }}\n        </p>\n        <div v-if=\"isError\" class=\"alert alert-danger\" role=\"alert\">\n            {{ $t(\"message.decodeError\") }}\n        </div>\n        <div class=\"form-group\">\n            <textarea class=\"form-control\" :placeholder=\"$t('text.text')\" v-model=\"topText\"  style=\"min-height: 250px\"></textarea>\n        </div>\n        <div class=\"form-group row justify-content-md-center\">\n            <div class=\"form-group col-12 col-md-4 col-lg-2\">\n                <select id=\"inputState\" class=\"form-control\" v-model=\"codecsType\">\n                    <option v-for=\"item in codecsTypes\">{{ item }}</option>\n                </select>\n            </div>\n            <div class=\"form-group col-12 col-md-3 col-lg-2\">\n                <button type=\"button\" class=\"btn btn-sm btn-primary btn-block\" @click=\"encode\">{{\n                    $t(\"text.encode\")}}\n                </button>\n            </div>\n            <div class=\"form-group col-12 col-md-3 col-lg-2\">\n                <button type=\"button\" class=\"btn btn-sm btn-primary btn-block\" @click=\"decode\">{{\n                    $t(\"text.decode\")}}\n                </button>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <TextAreaHasCopy :placeholder=\"$t('text.ciphertext')\" minHeight=\"250px\" :value=\"bottomText\"></TextAreaHasCopy>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { Base64 } from 'js-base64';\n    import Base32 from 'base-32';\n    import punycode from 'punycode';\n    import TextAreaHasCopy from '../../components/elements/TextAreaHasCopy.vue';\n\n    export default {\n        components: {\n            TextAreaHasCopy\n        },\n        metaInfo() {\n            return {\n                title: this.$i18n.t('title.codecs'),\n                meta: []\n            }\n        },\n        data() {\n            return {\n                codecsTypes: [\"base64\", \"base64url\", \"base32\", \"Punycode\", \"Punycode (Domain)\"],\n                codecsType: \"base64\",\n                topText: \"\",\n                bottomText: \"\",\n                isError: false\n            }\n        },\n        methods: {\n            decode() {\n                let targetText = \"\";\n                this.isError = false;\n                try {\n                    switch (this.codecsType) {\n                        case 'base64':\n                            targetText = Base64.decode(this.topText);\n                            break;\n                        case 'base64url':\n                            targetText = Base64.decode(this.topText);\n                            break;\n                        case 'base32':\n                            targetText = Base32.decode(this.topText);\n                            break;\n                        case 'Punycode':\n                            targetText = punycode.decode(this.topText);\n                            break;\n                        case 'Punycode (Domain)':\n                            targetText = punycode.toUnicode(this.topText);\n                            break;\n                    }\n                } catch {\n                    this.isError = true;\n                }\n\n                this.bottomText = targetText;\n            },\n            encode() {\n                let targetText = \"\";\n                switch (this.codecsType) {\n                    case 'base64':\n                        targetText = Base64.encode(this.topText);\n                        break;\n                    case 'base64url':\n                        targetText = Base64.encodeURI(this.topText);\n                        break;\n                    case 'base32':\n                        targetText = Base32.encode(this.topText);\n                        break;\n                    case 'Punycode':\n                        targetText = punycode.encode(this.topText);\n                        break;\n                    case 'Punycode (Domain)':\n                        targetText = punycode.toASCII(this.topText);\n                        break;\n                }\n\n                this.bottomText = targetText;\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Codecs.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Codecs.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Codecs.vue?vue&type=template&id=c23866ec&scoped=true&\"\nimport script from \"./Codecs.vue?vue&type=script&lang=js&\"\nexport * from \"./Codecs.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c23866ec\",\n  null\n  \n)\n\nexport default component.exports","!function(t,r){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=r();else if(\"function\"==typeof define&&define.amd)define([],r);else{var e=r();for(var n in e)(\"object\"==typeof exports?exports:t)[n]=e[n]}}(this,function(){return function(t){function r(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}var e={};return r.m=t,r.c=e,r.i=function(t){return t},r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,\"a\",e),e},r.o=function(t,r){return Object.prototype.hasOwnProperty.call(t,r)},r.p=\"\",r(r.s=1)}([function(t,r,e){\"use strict\";(function(t){function n(){return o.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function i(t,r){if(n()<r)throw new RangeError(\"Invalid typed array length\");return o.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(r),t.__proto__=o.prototype):(null===t&&(t=new o(r)),t.length=r),t}function o(t,r,e){if(!(o.TYPED_ARRAY_SUPPORT||this instanceof o))return new o(t,r,e);if(\"number\"==typeof t){if(\"string\"==typeof r)throw new Error(\"If encoding is specified then the first argument must be a string\");return a(this,t)}return f(this,t,r,e)}function f(t,r,e,n){if(\"number\"==typeof r)throw new TypeError('\"value\" argument must not be a number');return\"undefined\"!=typeof ArrayBuffer&&r instanceof ArrayBuffer?l(t,r,e,n):\"string\"==typeof r?h(t,r,e):p(t,r)}function u(t){if(\"number\"!=typeof t)throw new TypeError('\"size\" argument must be a number');if(t<0)throw new RangeError('\"size\" argument must not be negative')}function s(t,r,e,n){return u(r),r<=0?i(t,r):void 0!==e?\"string\"==typeof n?i(t,r).fill(e,n):i(t,r).fill(e):i(t,r)}function a(t,r){if(u(r),t=i(t,r<0?0:0|g(r)),!o.TYPED_ARRAY_SUPPORT)for(var e=0;e<r;++e)t[e]=0;return t}function h(t,r,e){if(\"string\"==typeof e&&\"\"!==e||(e=\"utf8\"),!o.isEncoding(e))throw new TypeError('\"encoding\" must be a valid string encoding');var n=0|d(r,e);t=i(t,n);var f=t.write(r,e);return f!==n&&(t=t.slice(0,f)),t}function c(t,r){var e=r.length<0?0:0|g(r.length);t=i(t,e);for(var n=0;n<e;n+=1)t[n]=255&r[n];return t}function l(t,r,e,n){if(r.byteLength,e<0||r.byteLength<e)throw new RangeError(\"'offset' is out of bounds\");if(r.byteLength<e+(n||0))throw new RangeError(\"'length' is out of bounds\");return r=void 0===e&&void 0===n?new Uint8Array(r):void 0===n?new Uint8Array(r,e):new Uint8Array(r,e,n),o.TYPED_ARRAY_SUPPORT?(t=r,t.__proto__=o.prototype):t=c(t,r),t}function p(t,r){if(o.isBuffer(r)){var e=0|g(r.length);return t=i(t,e),0===t.length?t:(r.copy(t,0,0,e),t)}if(r){if(\"undefined\"!=typeof ArrayBuffer&&r.buffer instanceof ArrayBuffer||\"length\"in r)return\"number\"!=typeof r.length||H(r.length)?i(t,0):c(t,r);if(\"Buffer\"===r.type&&W(r.data))return c(t,r.data)}throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\")}function g(t){if(t>=n())throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+n().toString(16)+\" bytes\");return 0|t}function y(t){return+t!=t&&(t=0),o.alloc(+t)}function d(t,r){if(o.isBuffer(t))return t.length;if(\"undefined\"!=typeof ArrayBuffer&&\"function\"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;\"string\"!=typeof t&&(t=\"\"+t);var e=t.length;if(0===e)return 0;for(var n=!1;;)switch(r){case\"ascii\":case\"latin1\":case\"binary\":return e;case\"utf8\":case\"utf-8\":case void 0:return X(t).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*e;case\"hex\":return e>>>1;case\"base64\":return q(t).length;default:if(n)return X(t).length;r=(\"\"+r).toLowerCase(),n=!0}}function w(t,r,e){var n=!1;if((void 0===r||r<0)&&(r=0),r>this.length)return\"\";if((void 0===e||e>this.length)&&(e=this.length),e<=0)return\"\";if(e>>>=0,r>>>=0,e<=r)return\"\";for(t||(t=\"utf8\");;)switch(t){case\"hex\":return M(this,r,e);case\"utf8\":case\"utf-8\":return U(this,r,e);case\"ascii\":return Y(this,r,e);case\"latin1\":case\"binary\":return I(this,r,e);case\"base64\":return T(this,r,e);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return C(this,r,e);default:if(n)throw new TypeError(\"Unknown encoding: \"+t);t=(t+\"\").toLowerCase(),n=!0}}function v(t,r,e){var n=t[r];t[r]=t[e],t[e]=n}function A(t,r,e,n,i){if(0===t.length)return-1;if(\"string\"==typeof e?(n=e,e=0):e>2147483647?e=2147483647:e<-2147483648&&(e=-2147483648),e=+e,isNaN(e)&&(e=i?0:t.length-1),e<0&&(e=t.length+e),e>=t.length){if(i)return-1;e=t.length-1}else if(e<0){if(!i)return-1;e=0}if(\"string\"==typeof r&&(r=o.from(r,n)),o.isBuffer(r))return 0===r.length?-1:E(t,r,e,n,i);if(\"number\"==typeof r)return r&=255,o.TYPED_ARRAY_SUPPORT&&\"function\"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,r,e):Uint8Array.prototype.lastIndexOf.call(t,r,e):E(t,[r],e,n,i);throw new TypeError(\"val must be string, number or Buffer\")}function E(t,r,e,n,i){function o(t,r){return 1===f?t[r]:t.readUInt16BE(r*f)}var f=1,u=t.length,s=r.length;if(void 0!==n&&(\"ucs2\"===(n=String(n).toLowerCase())||\"ucs-2\"===n||\"utf16le\"===n||\"utf-16le\"===n)){if(t.length<2||r.length<2)return-1;f=2,u/=2,s/=2,e/=2}var a;if(i){var h=-1;for(a=e;a<u;a++)if(o(t,a)===o(r,-1===h?0:a-h)){if(-1===h&&(h=a),a-h+1===s)return h*f}else-1!==h&&(a-=a-h),h=-1}else for(e+s>u&&(e=u-s),a=e;a>=0;a--){for(var c=!0,l=0;l<s;l++)if(o(t,a+l)!==o(r,l)){c=!1;break}if(c)return a}return-1}function b(t,r,e,n){e=Number(e)||0;var i=t.length-e;n?(n=Number(n))>i&&(n=i):n=i;var o=r.length;if(o%2!=0)throw new TypeError(\"Invalid hex string\");n>o/2&&(n=o/2);for(var f=0;f<n;++f){var u=parseInt(r.substr(2*f,2),16);if(isNaN(u))return f;t[e+f]=u}return f}function _(t,r,e,n){return G(X(r,t.length-e),t,e,n)}function m(t,r,e,n){return G(J(r),t,e,n)}function R(t,r,e,n){return m(t,r,e,n)}function P(t,r,e,n){return G(q(r),t,e,n)}function B(t,r,e,n){return G(Z(r,t.length-e),t,e,n)}function T(t,r,e){return 0===r&&e===t.length?K.fromByteArray(t):K.fromByteArray(t.slice(r,e))}function U(t,r,e){e=Math.min(t.length,e);for(var n=[],i=r;i<e;){var o=t[i],f=null,u=o>239?4:o>223?3:o>191?2:1;if(i+u<=e){var s,a,h,c;switch(u){case 1:o<128&&(f=o);break;case 2:s=t[i+1],128==(192&s)&&(c=(31&o)<<6|63&s)>127&&(f=c);break;case 3:s=t[i+1],a=t[i+2],128==(192&s)&&128==(192&a)&&(c=(15&o)<<12|(63&s)<<6|63&a)>2047&&(c<55296||c>57343)&&(f=c);break;case 4:s=t[i+1],a=t[i+2],h=t[i+3],128==(192&s)&&128==(192&a)&&128==(192&h)&&(c=(15&o)<<18|(63&s)<<12|(63&a)<<6|63&h)>65535&&c<1114112&&(f=c)}}null===f?(f=65533,u=1):f>65535&&(f-=65536,n.push(f>>>10&1023|55296),f=56320|1023&f),n.push(f),i+=u}return S(n)}function S(t){var r=t.length;if(r<=$)return String.fromCharCode.apply(String,t);for(var e=\"\",n=0;n<r;)e+=String.fromCharCode.apply(String,t.slice(n,n+=$));return e}function Y(t,r,e){var n=\"\";e=Math.min(t.length,e);for(var i=r;i<e;++i)n+=String.fromCharCode(127&t[i]);return n}function I(t,r,e){var n=\"\";e=Math.min(t.length,e);for(var i=r;i<e;++i)n+=String.fromCharCode(t[i]);return n}function M(t,r,e){var n=t.length;(!r||r<0)&&(r=0),(!e||e<0||e>n)&&(e=n);for(var i=\"\",o=r;o<e;++o)i+=V(t[o]);return i}function C(t,r,e){for(var n=t.slice(r,e),i=\"\",o=0;o<n.length;o+=2)i+=String.fromCharCode(n[o]+256*n[o+1]);return i}function O(t,r,e){if(t%1!=0||t<0)throw new RangeError(\"offset is not uint\");if(t+r>e)throw new RangeError(\"Trying to access beyond buffer length\")}function L(t,r,e,n,i,f){if(!o.isBuffer(t))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>i||r<f)throw new RangeError('\"value\" argument is out of bounds');if(e+n>t.length)throw new RangeError(\"Index out of range\")}function x(t,r,e,n){r<0&&(r=65535+r+1);for(var i=0,o=Math.min(t.length-e,2);i<o;++i)t[e+i]=(r&255<<8*(n?i:1-i))>>>8*(n?i:1-i)}function D(t,r,e,n){r<0&&(r=4294967295+r+1);for(var i=0,o=Math.min(t.length-e,4);i<o;++i)t[e+i]=r>>>8*(n?i:3-i)&255}function N(t,r,e,n,i,o){if(e+n>t.length)throw new RangeError(\"Index out of range\");if(e<0)throw new RangeError(\"Index out of range\")}function k(t,r,e,n,i){return i||N(t,r,e,4,3.4028234663852886e38,-3.4028234663852886e38),Q.write(t,r,e,n,23,4),e+4}function j(t,r,e,n,i){return i||N(t,r,e,8,1.7976931348623157e308,-1.7976931348623157e308),Q.write(t,r,e,n,52,8),e+8}function F(t){if(t=z(t).replace(tt,\"\"),t.length<2)return\"\";for(;t.length%4!=0;)t+=\"=\";return t}function z(t){return t.trim?t.trim():t.replace(/^\\s+|\\s+$/g,\"\")}function V(t){return t<16?\"0\"+t.toString(16):t.toString(16)}function X(t,r){r=r||1/0;for(var e,n=t.length,i=null,o=[],f=0;f<n;++f){if((e=t.charCodeAt(f))>55295&&e<57344){if(!i){if(e>56319){(r-=3)>-1&&o.push(239,191,189);continue}if(f+1===n){(r-=3)>-1&&o.push(239,191,189);continue}i=e;continue}if(e<56320){(r-=3)>-1&&o.push(239,191,189),i=e;continue}e=65536+(i-55296<<10|e-56320)}else i&&(r-=3)>-1&&o.push(239,191,189);if(i=null,e<128){if((r-=1)<0)break;o.push(e)}else if(e<2048){if((r-=2)<0)break;o.push(e>>6|192,63&e|128)}else if(e<65536){if((r-=3)<0)break;o.push(e>>12|224,e>>6&63|128,63&e|128)}else{if(!(e<1114112))throw new Error(\"Invalid code point\");if((r-=4)<0)break;o.push(e>>18|240,e>>12&63|128,e>>6&63|128,63&e|128)}}return o}function J(t){for(var r=[],e=0;e<t.length;++e)r.push(255&t.charCodeAt(e));return r}function Z(t,r){for(var e,n,i,o=[],f=0;f<t.length&&!((r-=2)<0);++f)e=t.charCodeAt(f),n=e>>8,i=e%256,o.push(i),o.push(n);return o}function q(t){return K.toByteArray(F(t))}function G(t,r,e,n){for(var i=0;i<n&&!(i+e>=r.length||i>=t.length);++i)r[i+e]=t[i];return i}function H(t){return t!==t}/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nvar K=e(2),Q=e(3),W=e(4);r.Buffer=o,r.SlowBuffer=y,r.INSPECT_MAX_BYTES=50,o.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&\"function\"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}(),r.kMaxLength=n(),o.poolSize=8192,o._augment=function(t){return t.__proto__=o.prototype,t},o.from=function(t,r,e){return f(null,t,r,e)},o.TYPED_ARRAY_SUPPORT&&(o.prototype.__proto__=Uint8Array.prototype,o.__proto__=Uint8Array,\"undefined\"!=typeof Symbol&&Symbol.species&&o[Symbol.species]===o&&Object.defineProperty(o,Symbol.species,{value:null,configurable:!0})),o.alloc=function(t,r,e){return s(null,t,r,e)},o.allocUnsafe=function(t){return a(null,t)},o.allocUnsafeSlow=function(t){return a(null,t)},o.isBuffer=function(t){return!(null==t||!t._isBuffer)},o.compare=function(t,r){if(!o.isBuffer(t)||!o.isBuffer(r))throw new TypeError(\"Arguments must be Buffers\");if(t===r)return 0;for(var e=t.length,n=r.length,i=0,f=Math.min(e,n);i<f;++i)if(t[i]!==r[i]){e=t[i],n=r[i];break}return e<n?-1:n<e?1:0},o.isEncoding=function(t){switch(String(t).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},o.concat=function(t,r){if(!W(t))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===t.length)return o.alloc(0);var e;if(void 0===r)for(r=0,e=0;e<t.length;++e)r+=t[e].length;var n=o.allocUnsafe(r),i=0;for(e=0;e<t.length;++e){var f=t[e];if(!o.isBuffer(f))throw new TypeError('\"list\" argument must be an Array of Buffers');f.copy(n,i),i+=f.length}return n},o.byteLength=d,o.prototype._isBuffer=!0,o.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(var r=0;r<t;r+=2)v(this,r,r+1);return this},o.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(var r=0;r<t;r+=4)v(this,r,r+3),v(this,r+1,r+2);return this},o.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(var r=0;r<t;r+=8)v(this,r,r+7),v(this,r+1,r+6),v(this,r+2,r+5),v(this,r+3,r+4);return this},o.prototype.toString=function(){var t=0|this.length;return 0===t?\"\":0===arguments.length?U(this,0,t):w.apply(this,arguments)},o.prototype.equals=function(t){if(!o.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");return this===t||0===o.compare(this,t)},o.prototype.inspect=function(){var t=\"\",e=r.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString(\"hex\",0,e).match(/.{2}/g).join(\" \"),this.length>e&&(t+=\" ... \")),\"<Buffer \"+t+\">\"},o.prototype.compare=function(t,r,e,n,i){if(!o.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");if(void 0===r&&(r=0),void 0===e&&(e=t?t.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),r<0||e>t.length||n<0||i>this.length)throw new RangeError(\"out of range index\");if(n>=i&&r>=e)return 0;if(n>=i)return-1;if(r>=e)return 1;if(r>>>=0,e>>>=0,n>>>=0,i>>>=0,this===t)return 0;for(var f=i-n,u=e-r,s=Math.min(f,u),a=this.slice(n,i),h=t.slice(r,e),c=0;c<s;++c)if(a[c]!==h[c]){f=a[c],u=h[c];break}return f<u?-1:u<f?1:0},o.prototype.includes=function(t,r,e){return-1!==this.indexOf(t,r,e)},o.prototype.indexOf=function(t,r,e){return A(this,t,r,e,!0)},o.prototype.lastIndexOf=function(t,r,e){return A(this,t,r,e,!1)},o.prototype.write=function(t,r,e,n){if(void 0===r)n=\"utf8\",e=this.length,r=0;else if(void 0===e&&\"string\"==typeof r)n=r,e=this.length,r=0;else{if(!isFinite(r))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");r|=0,isFinite(e)?(e|=0,void 0===n&&(n=\"utf8\")):(n=e,e=void 0)}var i=this.length-r;if((void 0===e||e>i)&&(e=i),t.length>0&&(e<0||r<0)||r>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");n||(n=\"utf8\");for(var o=!1;;)switch(n){case\"hex\":return b(this,t,r,e);case\"utf8\":case\"utf-8\":return _(this,t,r,e);case\"ascii\":return m(this,t,r,e);case\"latin1\":case\"binary\":return R(this,t,r,e);case\"base64\":return P(this,t,r,e);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return B(this,t,r,e);default:if(o)throw new TypeError(\"Unknown encoding: \"+n);n=(\"\"+n).toLowerCase(),o=!0}},o.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};var $=4096;o.prototype.slice=function(t,r){var e=this.length;t=~~t,r=void 0===r?e:~~r,t<0?(t+=e)<0&&(t=0):t>e&&(t=e),r<0?(r+=e)<0&&(r=0):r>e&&(r=e),r<t&&(r=t);var n;if(o.TYPED_ARRAY_SUPPORT)n=this.subarray(t,r),n.__proto__=o.prototype;else{var i=r-t;n=new o(i,void 0);for(var f=0;f<i;++f)n[f]=this[f+t]}return n},o.prototype.readUIntLE=function(t,r,e){t|=0,r|=0,e||O(t,r,this.length);for(var n=this[t],i=1,o=0;++o<r&&(i*=256);)n+=this[t+o]*i;return n},o.prototype.readUIntBE=function(t,r,e){t|=0,r|=0,e||O(t,r,this.length);for(var n=this[t+--r],i=1;r>0&&(i*=256);)n+=this[t+--r]*i;return n},o.prototype.readUInt8=function(t,r){return r||O(t,1,this.length),this[t]},o.prototype.readUInt16LE=function(t,r){return r||O(t,2,this.length),this[t]|this[t+1]<<8},o.prototype.readUInt16BE=function(t,r){return r||O(t,2,this.length),this[t]<<8|this[t+1]},o.prototype.readUInt32LE=function(t,r){return r||O(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},o.prototype.readUInt32BE=function(t,r){return r||O(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},o.prototype.readIntLE=function(t,r,e){t|=0,r|=0,e||O(t,r,this.length);for(var n=this[t],i=1,o=0;++o<r&&(i*=256);)n+=this[t+o]*i;return i*=128,n>=i&&(n-=Math.pow(2,8*r)),n},o.prototype.readIntBE=function(t,r,e){t|=0,r|=0,e||O(t,r,this.length);for(var n=r,i=1,o=this[t+--n];n>0&&(i*=256);)o+=this[t+--n]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*r)),o},o.prototype.readInt8=function(t,r){return r||O(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},o.prototype.readInt16LE=function(t,r){r||O(t,2,this.length);var e=this[t]|this[t+1]<<8;return 32768&e?4294901760|e:e},o.prototype.readInt16BE=function(t,r){r||O(t,2,this.length);var e=this[t+1]|this[t]<<8;return 32768&e?4294901760|e:e},o.prototype.readInt32LE=function(t,r){return r||O(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},o.prototype.readInt32BE=function(t,r){return r||O(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},o.prototype.readFloatLE=function(t,r){return r||O(t,4,this.length),Q.read(this,t,!0,23,4)},o.prototype.readFloatBE=function(t,r){return r||O(t,4,this.length),Q.read(this,t,!1,23,4)},o.prototype.readDoubleLE=function(t,r){return r||O(t,8,this.length),Q.read(this,t,!0,52,8)},o.prototype.readDoubleBE=function(t,r){return r||O(t,8,this.length),Q.read(this,t,!1,52,8)},o.prototype.writeUIntLE=function(t,r,e,n){if(t=+t,r|=0,e|=0,!n){L(this,t,r,e,Math.pow(2,8*e)-1,0)}var i=1,o=0;for(this[r]=255&t;++o<e&&(i*=256);)this[r+o]=t/i&255;return r+e},o.prototype.writeUIntBE=function(t,r,e,n){if(t=+t,r|=0,e|=0,!n){L(this,t,r,e,Math.pow(2,8*e)-1,0)}var i=e-1,o=1;for(this[r+i]=255&t;--i>=0&&(o*=256);)this[r+i]=t/o&255;return r+e},o.prototype.writeUInt8=function(t,r,e){return t=+t,r|=0,e||L(this,t,r,1,255,0),o.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[r]=255&t,r+1},o.prototype.writeUInt16LE=function(t,r,e){return t=+t,r|=0,e||L(this,t,r,2,65535,0),o.TYPED_ARRAY_SUPPORT?(this[r]=255&t,this[r+1]=t>>>8):x(this,t,r,!0),r+2},o.prototype.writeUInt16BE=function(t,r,e){return t=+t,r|=0,e||L(this,t,r,2,65535,0),o.TYPED_ARRAY_SUPPORT?(this[r]=t>>>8,this[r+1]=255&t):x(this,t,r,!1),r+2},o.prototype.writeUInt32LE=function(t,r,e){return t=+t,r|=0,e||L(this,t,r,4,4294967295,0),o.TYPED_ARRAY_SUPPORT?(this[r+3]=t>>>24,this[r+2]=t>>>16,this[r+1]=t>>>8,this[r]=255&t):D(this,t,r,!0),r+4},o.prototype.writeUInt32BE=function(t,r,e){return t=+t,r|=0,e||L(this,t,r,4,4294967295,0),o.TYPED_ARRAY_SUPPORT?(this[r]=t>>>24,this[r+1]=t>>>16,this[r+2]=t>>>8,this[r+3]=255&t):D(this,t,r,!1),r+4},o.prototype.writeIntLE=function(t,r,e,n){if(t=+t,r|=0,!n){var i=Math.pow(2,8*e-1);L(this,t,r,e,i-1,-i)}var o=0,f=1,u=0;for(this[r]=255&t;++o<e&&(f*=256);)t<0&&0===u&&0!==this[r+o-1]&&(u=1),this[r+o]=(t/f>>0)-u&255;return r+e},o.prototype.writeIntBE=function(t,r,e,n){if(t=+t,r|=0,!n){var i=Math.pow(2,8*e-1);L(this,t,r,e,i-1,-i)}var o=e-1,f=1,u=0;for(this[r+o]=255&t;--o>=0&&(f*=256);)t<0&&0===u&&0!==this[r+o+1]&&(u=1),this[r+o]=(t/f>>0)-u&255;return r+e},o.prototype.writeInt8=function(t,r,e){return t=+t,r|=0,e||L(this,t,r,1,127,-128),o.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[r]=255&t,r+1},o.prototype.writeInt16LE=function(t,r,e){return t=+t,r|=0,e||L(this,t,r,2,32767,-32768),o.TYPED_ARRAY_SUPPORT?(this[r]=255&t,this[r+1]=t>>>8):x(this,t,r,!0),r+2},o.prototype.writeInt16BE=function(t,r,e){return t=+t,r|=0,e||L(this,t,r,2,32767,-32768),o.TYPED_ARRAY_SUPPORT?(this[r]=t>>>8,this[r+1]=255&t):x(this,t,r,!1),r+2},o.prototype.writeInt32LE=function(t,r,e){return t=+t,r|=0,e||L(this,t,r,4,2147483647,-2147483648),o.TYPED_ARRAY_SUPPORT?(this[r]=255&t,this[r+1]=t>>>8,this[r+2]=t>>>16,this[r+3]=t>>>24):D(this,t,r,!0),r+4},o.prototype.writeInt32BE=function(t,r,e){return t=+t,r|=0,e||L(this,t,r,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),o.TYPED_ARRAY_SUPPORT?(this[r]=t>>>24,this[r+1]=t>>>16,this[r+2]=t>>>8,this[r+3]=255&t):D(this,t,r,!1),r+4},o.prototype.writeFloatLE=function(t,r,e){return k(this,t,r,!0,e)},o.prototype.writeFloatBE=function(t,r,e){return k(this,t,r,!1,e)},o.prototype.writeDoubleLE=function(t,r,e){return j(this,t,r,!0,e)},o.prototype.writeDoubleBE=function(t,r,e){return j(this,t,r,!1,e)},o.prototype.copy=function(t,r,e,n){if(e||(e=0),n||0===n||(n=this.length),r>=t.length&&(r=t.length),r||(r=0),n>0&&n<e&&(n=e),n===e)return 0;if(0===t.length||0===this.length)return 0;if(r<0)throw new RangeError(\"targetStart out of bounds\");if(e<0||e>=this.length)throw new RangeError(\"sourceStart out of bounds\");if(n<0)throw new RangeError(\"sourceEnd out of bounds\");n>this.length&&(n=this.length),t.length-r<n-e&&(n=t.length-r+e);var i,f=n-e;if(this===t&&e<r&&r<n)for(i=f-1;i>=0;--i)t[i+r]=this[i+e];else if(f<1e3||!o.TYPED_ARRAY_SUPPORT)for(i=0;i<f;++i)t[i+r]=this[i+e];else Uint8Array.prototype.set.call(t,this.subarray(e,e+f),r);return f},o.prototype.fill=function(t,r,e,n){if(\"string\"==typeof t){if(\"string\"==typeof r?(n=r,r=0,e=this.length):\"string\"==typeof e&&(n=e,e=this.length),1===t.length){var i=t.charCodeAt(0);i<256&&(t=i)}if(void 0!==n&&\"string\"!=typeof n)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof n&&!o.isEncoding(n))throw new TypeError(\"Unknown encoding: \"+n)}else\"number\"==typeof t&&(t&=255);if(r<0||this.length<r||this.length<e)throw new RangeError(\"Out of range index\");if(e<=r)return this;r>>>=0,e=void 0===e?this.length:e>>>0,t||(t=0);var f;if(\"number\"==typeof t)for(f=r;f<e;++f)this[f]=t;else{var u=o.isBuffer(t)?t:X(new o(t,n).toString()),s=u.length;for(f=0;f<e-r;++f)this[f+r]=u[f%s]}return this};var tt=/[^+\\/0-9A-Za-z-_]/g}).call(r,e(5))},function(t,r,e){\"use strict\";(function(t){Object.defineProperty(r,\"__esModule\",{value:!0}),r.default=function(){function r(r){t.isBuffer(r)||(r=t.from(r));var e=o(r,5),u=\"\";if(e){var a=void 0;for(a=0;a<e.length;a++){var c=e[a],p=void 0,g=void 0,y=void 0;for(p=0;p<8;p++){if(g=f(p),y=s(p),g>=c.length){u+=i(l,g);break}var d=c[g],w=d&n(y-5,y);if(y-5<0){var v=8-Math.abs(y-5);w=w<<5-y|(c[g+1]&n(v,8))>>v}else w>>>=y-5;u+=h[w]}}}return u}function e(r){t.isBuffer(r)||(r=t.from(r));var e=o(r,8),i=\"\";if(e){var f=void 0;for(f=0;f<e.length;f++){var s=e[f],h=void 0,l=void 0,g=void 0;for(h=0;h<5;h++){l=u(h),g=a(h);for(var y=8-g,d=c[s[l]],w=d<<y&n(y,8);y>0;){if(l+=1,s[l]===p)return i;var v=c[s[l]];w|=y<5?v>>>5-y:v<<y-5,y-=5}i+=String.fromCharCode(w)}}}return i}function n(t,r){var e=0,n=void 0;for(t=t<0?0:t,n=t;n<r;n++)e|=1<<n;return e}function i(t,r){var e=void 0;return e=1==r?6:2==r?4:3==r?3:1,t.repeat(e)}function o(t,r){var e=[],n=Math.ceil(t.byteLength/r),i=void 0,o=void 0;for(i=0;i<n;i++)o=r*i,e.push(t.slice(o,o+r));return e}function f(t){return Math.floor(5*t/8)}function u(t){return Math.floor(8*t/5)}function s(t){return 8-5*t%8}function a(t){return 5-8*t%5}var h=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",c=function(){var t={},r=void 0;for(r=0;r<h.length;r++)t[h.charCodeAt(r)]=r;return t}(),l=\"=\",p=61;return{encode:r,decode:e}}()}).call(r,e(0).Buffer)},function(t,r,e){\"use strict\";function n(t){var r=t.length;if(r%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");return\"=\"===t[r-2]?2:\"=\"===t[r-1]?1:0}function i(t){return 3*t.length/4-n(t)}function o(t){var r,e,i,o,f,u=t.length;o=n(t),f=new c(3*u/4-o),e=o>0?u-4:u;var s=0;for(r=0;r<e;r+=4)i=h[t.charCodeAt(r)]<<18|h[t.charCodeAt(r+1)]<<12|h[t.charCodeAt(r+2)]<<6|h[t.charCodeAt(r+3)],f[s++]=i>>16&255,f[s++]=i>>8&255,f[s++]=255&i;return 2===o?(i=h[t.charCodeAt(r)]<<2|h[t.charCodeAt(r+1)]>>4,f[s++]=255&i):1===o&&(i=h[t.charCodeAt(r)]<<10|h[t.charCodeAt(r+1)]<<4|h[t.charCodeAt(r+2)]>>2,f[s++]=i>>8&255,f[s++]=255&i),f}function f(t){return a[t>>18&63]+a[t>>12&63]+a[t>>6&63]+a[63&t]}function u(t,r,e){for(var n,i=[],o=r;o<e;o+=3)n=(t[o]<<16)+(t[o+1]<<8)+t[o+2],i.push(f(n));return i.join(\"\")}function s(t){for(var r,e=t.length,n=e%3,i=\"\",o=[],f=0,s=e-n;f<s;f+=16383)o.push(u(t,f,f+16383>s?s:f+16383));return 1===n?(r=t[e-1],i+=a[r>>2],i+=a[r<<4&63],i+=\"==\"):2===n&&(r=(t[e-2]<<8)+t[e-1],i+=a[r>>10],i+=a[r>>4&63],i+=a[r<<2&63],i+=\"=\"),o.push(i),o.join(\"\")}r.byteLength=i,r.toByteArray=o,r.fromByteArray=s;for(var a=[],h=[],c=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,l=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",p=0,g=l.length;p<g;++p)a[p]=l[p],h[l.charCodeAt(p)]=p;h[\"-\".charCodeAt(0)]=62,h[\"_\".charCodeAt(0)]=63},function(t,r){r.read=function(t,r,e,n,i){var o,f,u=8*i-n-1,s=(1<<u)-1,a=s>>1,h=-7,c=e?i-1:0,l=e?-1:1,p=t[r+c];for(c+=l,o=p&(1<<-h)-1,p>>=-h,h+=u;h>0;o=256*o+t[r+c],c+=l,h-=8);for(f=o&(1<<-h)-1,o>>=-h,h+=n;h>0;f=256*f+t[r+c],c+=l,h-=8);if(0===o)o=1-a;else{if(o===s)return f?NaN:1/0*(p?-1:1);f+=Math.pow(2,n),o-=a}return(p?-1:1)*f*Math.pow(2,o-n)},r.write=function(t,r,e,n,i,o){var f,u,s,a=8*o-i-1,h=(1<<a)-1,c=h>>1,l=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,p=n?0:o-1,g=n?1:-1,y=r<0||0===r&&1/r<0?1:0;for(r=Math.abs(r),isNaN(r)||r===1/0?(u=isNaN(r)?1:0,f=h):(f=Math.floor(Math.log(r)/Math.LN2),r*(s=Math.pow(2,-f))<1&&(f--,s*=2),r+=f+c>=1?l/s:l*Math.pow(2,1-c),r*s>=2&&(f++,s/=2),f+c>=h?(u=0,f=h):f+c>=1?(u=(r*s-1)*Math.pow(2,i),f+=c):(u=r*Math.pow(2,c-1)*Math.pow(2,i),f=0));i>=8;t[e+p]=255&u,p+=g,u/=256,i-=8);for(f=f<<i|u,a+=i;a>0;t[e+p]=255&f,p+=g,f/=256,a-=8);t[e+p-g]|=128*y}},function(t,r){var e={}.toString;t.exports=Array.isArray||function(t){return\"[object Array]\"==e.call(t)}},function(t,r){var e;e=function(){return this}();try{e=e||Function(\"return this\")()||(0,eval)(\"this\")}catch(t){\"object\"==typeof window&&(e=window)}t.exports=e}])});","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"bd-clipboard\"},[_c('h4',[_c('a',{staticClass:\"btn-clipboard badge badge-pill badge-primary bg-main-color text-area-has-copy\",attrs:{\"href\":\"#\",\"data-toggle\":\"tooltip\",\"data-placement\":\"top\",\"title\":_vm.$t('text.clickToCopy')},on:{\"click\":_vm.copy}},[_c('font-awesome-icon',{attrs:{\"icon\":\"copy\"}})],1)])]),_c('textarea',{staticClass:\"form-control\",style:({minHeight: _vm.minHeight}),attrs:{\"placeholder\":_vm.placeholder,\"readonly\":\"\"}},[_vm._v(_vm._s(_vm.value))])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div class=\"bd-clipboard\">\n            <h4>\n                <a href=\"#\" class=\"btn-clipboard badge badge-pill badge-primary bg-main-color text-area-has-copy\"\n                   data-toggle=\"tooltip\" data-placement=\"top\" :title=\"$t('text.clickToCopy')\" @click=\"copy\"><font-awesome-icon icon=\"copy\"/></a>\n            </h4>\n        </div>\n        <textarea class=\"form-control\" :placeholder=\"placeholder\" :style=\"{minHeight: minHeight}\" readonly>{{ value }}</textarea>\n    </div>\n</template>\n\n<script>\n    import copy from 'copy-to-clipboard';\n\n    export default {\n        props: ['placeholder', 'minHeight', 'value'],\n\n        data() {\n            return {\n\n            }\n        },\n        methods: {\n            copy() {\n                copy(this.value);\n                $('.text-area-has-copy').attr('title', this.$i18n.t('text.copied'))\n                    .tooltip('_fixTitle')\n                    .tooltip('show');\n            }\n        },\n        computed: {\n\n        },\n        watch: {\n\n        },\n        components: {\n\n        },\n        mounted() {\n            let self = this;\n            $('[data-toggle=\"tooltip\"]').tooltip();\n            $('.text-area-has-copy').on('hidden.bs.tooltip', function () {\n                $('.text-area-has-copy').attr('title', self.$i18n.t('text.clickToCopy'))\n                    .tooltip('_fixTitle')\n            });\n        }\n    }\n</script>\n\n<style scoped lang=\"scss\">\n    .bd-clipboard {\n        position: relative;\n        display: none;\n        float: right;\n    }\n\n    .btn-clipboard {\n        position: absolute;\n        top: -.75rem;\n        right: -.75rem;\n        z-index: 10;\n        display: block;\n        padding: .25rem .5rem;\n    }\n\n    @media (min-width: 768px) {\n        .bd-clipboard {\n            display: block;\n        }\n    }\n\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TextAreaHasCopy.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TextAreaHasCopy.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TextAreaHasCopy.vue?vue&type=template&id=07f9acca&scoped=true&\"\nimport script from \"./TextAreaHasCopy.vue?vue&type=script&lang=js&\"\nexport * from \"./TextAreaHasCopy.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TextAreaHasCopy.vue?vue&type=style&index=0&id=07f9acca&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"07f9acca\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\n\nvar deselectCurrent = require('toggle-selection');\n\nvar defaultMessage = 'Copy to clipboard: #{key}, Enter';\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? '⌘' : 'Ctrl') + '+C';\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug, message, reselectPrevious, range, selection, mark, success = false;\n  if (!options) { options = {}; }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement('span');\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = 'unset';\n    // prevents scrolling to the end of the page\n    mark.style.position = 'fixed';\n    mark.style.top = 0;\n    mark.style.clip = 'rect(0, 0, 0, 0)';\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = 'pre';\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = 'text';\n    mark.style.MozUserSelect = 'text';\n    mark.style.msUserSelect = 'text';\n    mark.style.userSelect = 'text';\n\n    document.body.appendChild(mark);\n\n    range.selectNode(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand('copy');\n    if (!successful) {\n      throw new Error('copy command was unsuccessful');\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error('unable to copy using execCommand: ', err);\n    debug && console.warn('trying IE specific stuff');\n    try {\n      window.clipboardData.setData('text', text);\n      success = true;\n    } catch (err) {\n      debug && console.error('unable to copy using clipboardData: ', err);\n      debug && console.error('falling back to prompt');\n      message = format('message' in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == 'function') {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n"],"sourceRoot":""}